{"version":3,"file":"signalk-client-angular.umd.js","sources":["ng://signalk-client-angular/lib/uuid.ts","ng://signalk-client-angular/lib/utils.ts","ng://signalk-client-angular/lib/http-api.ts","ng://signalk-client-angular/lib/stream-api.ts","ng://signalk-client-angular/lib/apps-api.ts","ng://signalk-client-angular/lib/signalk-client.ts","ng://signalk-client-angular/lib/signalk-client.module.ts"],"sourcesContent":["/*\r\n * UUID: A js library to generate and parse UUIDs, TimeUUIDs and generate\r\n * TimeUUID based on dates for range selections.\r\n * @see http://www.ietf.org/rfc/rfc4122.txt\r\n **/\r\nexport class UUID {\r\n\r\n    private limitUI04;\r\n    private limitUI06;\r\n    private limitUI08;\r\n    private limitUI12;\r\n    private limitUI14;\r\n    private limitUI16;\r\n    private limitUI32;\r\n    private limitUI40;\r\n    private limitUI48;\r\n\r\n    private version:number;\r\n    private hex:string;\r\n\r\n    constructor() {\r\n        this.limitUI04 = this.maxFromBits(4);\r\n        this.limitUI06 = this.maxFromBits(6);\r\n        this.limitUI08 = this.maxFromBits(8);\r\n        this.limitUI12 = this.maxFromBits(12);\r\n        this.limitUI14 = this.maxFromBits(14);\r\n        this.limitUI16 = this.maxFromBits(16);\r\n        this.limitUI32 = this.maxFromBits(32);\r\n        this.limitUI40 = this.maxFromBits(40);\r\n        this.limitUI48 = this.maxFromBits(48); \r\n\r\n        this.create();\r\n    }\r\n\r\n    toString() { return this.hex }\r\n    toURN() { return 'urn:uuid:' + this.hex }\r\n    toSignalK():string  { return `urn:mrn:signalk:uuid:${this.hex}` }\r\n    toBytes() {\r\n        let parts = this.hex.split('-');\r\n        let ints = [];\r\n        let intPos = 0;\r\n        for (let i = 0; i < parts.length; i++) {\r\n            for (let j = 0; j < parts[i].length; j+=2) {\r\n            ints[intPos++] = parseInt(parts[i].substr(j, 2), 16);\r\n            }\r\n        }\r\n        return ints;\r\n    };    \r\n\r\n    private maxFromBits(bits) { return Math.pow(2, bits) };\r\n\r\n    private getRandomInt(min, max) { return Math.floor(Math.random() * (max - min + 1)) + min }\r\n\r\n    private randomUI04() { return this.getRandomInt(0, this.limitUI04-1) }\r\n    private randomUI06() { return this.getRandomInt(0, this.limitUI06-1);}\r\n    private randomUI08() { return this.getRandomInt(0, this.limitUI08-1) }\r\n    private randomUI12() { return this.getRandomInt(0, this.limitUI12-1) }\r\n    private randomUI14() { return this.getRandomInt(0, this.limitUI14-1) }\r\n    private randomUI16() { return this.getRandomInt(0, this.limitUI16-1) }\r\n    private randomUI32() { return this.getRandomInt(0, this.limitUI32-1) }\r\n    private randomUI40() { return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 40 - 30)) * (1 << 30) }\r\n    private randomUI48() { return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 48 - 30)) * (1 << 30) }\r\n\r\n    private create() {\r\n        this.fromParts(\r\n            this.randomUI32(),\r\n            this.randomUI16(),\r\n            0x4000 | this.randomUI12(),\r\n            0x80   | this.randomUI06(),\r\n            this.randomUI08(),\r\n            this.randomUI48()\r\n        );\r\n    };\r\n\r\n    private paddedString(string, length, z=null) {\r\n        string = String(string);\r\n        z = (!z) ? '0' : z;\r\n        let i = length - string.length;\r\n        for (; i > 0; i >>>= 1, z += z) {\r\n            if (i & 1) {\r\n            string = z + string;\r\n            }\r\n        }\r\n        return string;\r\n    };\r\n\r\n    private fromParts(timeLow, timeMid, timeHiAndVersion, clockSeqHiAndReserved, clockSeqLow, node) {\r\n        this.version = (timeHiAndVersion >> 12) & 0xF;\r\n        this.hex = this.paddedString(timeLow.toString(16), 8)\r\n            + '-'\r\n            + this.paddedString(timeMid.toString(16), 4)\r\n            + '-'\r\n            + this.paddedString(timeHiAndVersion.toString(16), 4)\r\n            + '-'\r\n            + this.paddedString(clockSeqHiAndReserved.toString(16), 2)\r\n            + this.paddedString(clockSeqLow.toString(16), 2)\r\n            + '-'\r\n            + this.paddedString(node.toString(16), 12);\r\n        return this;\r\n    };    \r\n\r\n};","import { UUID } from './uuid';\r\n\r\n// ** Path utilities\r\nexport class Path {\r\n\r\n    // ** transform dot notation to slash\r\n    static dotToSlash(path:string):string {\r\n        let p= path.split('?');\r\n        if(p[0].indexOf('.')!=-1) { \r\n            p[0]= p[0].split('.').join('/');\r\n        }\r\n        return p.join('?');\r\n    }\r\n\r\n    // ** parse context to valid Signal K path\r\n    static contextToPath(context:string):string {\r\n        let res= (context=='self' ) ? 'vessels.self': context;\r\n        return res.split('.').join('/');\r\n    }    \r\n\r\n}\r\n\r\n// ** Message templates **\r\nexport class Message {\r\n   \r\n    // ** return UPDATES message object\r\n    static updates() { \r\n        // array values= { values: [ {path: xx, value: xx } ] }\r\n        return { \r\n            context: null,\r\n            updates: [] \r\n        }\r\n    }\r\n    // ** return SUBSCRIBE message object\r\n    static subscribe() { \r\n        /* array values= {\r\n            \"path\": \"path.to.key\",\r\n            \"period\": 1000,\r\n            \"format\": \"delta\",\r\n            \"policy\": \"ideal\",\r\n            \"minPeriod\": 200\r\n            } */\r\n        return { \r\n            context: null,\r\n            subscribe: [] \r\n        }\r\n    }    \r\n    // ** return UNSUBSCRIBE message object\r\n    static unsubscribe() { \r\n        // array values= { \"path\": \"path.to.key\" }\r\n        return { \r\n            context: null,\r\n            unsubscribe: [] \r\n        }\r\n    }  \r\n    // ** return REQUEST message object\r\n    static request() { \r\n        return { \r\n            requestId: new UUID().toString()\r\n        }\r\n    }           \r\n\r\n}\r\n\r\n// ** Alarm message **\r\nexport class Alarm {\r\n\r\n    private _state:AlarmState;\r\n    private _method:Array<AlarmMethod>= [];\r\n    private _message:string='';\r\n\r\n    constructor(message:string, state?:AlarmState, visual?:boolean, sound?:boolean) {\r\n        this._message= (typeof message!== 'undefined') ? message : '';\r\n        this._state= (typeof state!== 'undefined') ? state : AlarmState.alarm;\r\n        if(visual) { this._method.push(AlarmMethod.visual)};\r\n        if(sound) { this._method.push(AlarmMethod.sound)};\r\n    }\r\n\r\n    get value() {\r\n        return {\r\n            message: this._message,\r\n            state: this._state,\r\n            method: this._method\r\n        }\r\n    }  \r\n}\r\n\r\nexport enum AlarmState {\r\n    normal= 'normal',\r\n    alert= 'alert',\r\n    warn= 'warn',\r\n    alarm= 'alarm',\r\n    emergency= 'emergency'\r\n};\r\n\r\nexport enum AlarmMethod {\r\n    visual= 'visual',\r\n    sound= 'sound'\r\n};\r\n\r\nexport enum AlarmType {\r\n    mob= 'notifications.mob',\r\n    fire= 'notifications.fire',\r\n    sinking= 'notifications.sinking',\r\n    flooding= 'notifications.flooding',\r\n    collision= 'notifications.collision',\r\n    grounding= 'notifications.grounding',\r\n    listing= 'notifications.listing',\r\n    adrift= 'notifications.adrift',\r\n    piracy= 'notifications.piracy',\r\n    abandon= 'notifications.abandon'\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Path } from './utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKHttp {\r\n\r\n    private _token: string;\r\n\r\n    // **************** ATTRIBUTES ***************************\r\n    public server: any;\r\n    public endpoint: string;\r\n    // ** set auth token value **\r\n    set authToken(val:string) { this._token= val }    \r\n\r\n    // *******************************************************\r\n\r\n    constructor( private http: HttpClient ) { }   \r\n    \r\n    // ** get the contents of the Signal K tree pointed to by self. returns: Observable \r\n    getSelf() { return this.get(`vessels/self`) }\r\n\r\n    //** get ID of vessel self via http. returns: Observable \r\n    getSelfId() { return this.get(`self`) }\r\n\r\n    // ** return observable response for meta object at the specified context and path\r\n    getMeta(context:string, path:string) { \r\n        return this.get(`${Path.contextToPath(context)}/${Path.dotToSlash(path)}/meta`);\r\n    }    \r\n\r\n    //** get API path value via http. returns: Observable \r\n    get(path:string) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= this.endpoint + Path.dotToSlash(path);\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.get( url, { headers: headers } );\r\n        }\r\n        else { return this.http.get(url) }\r\n    }\r\n\r\n    //** send value to API path via http PUT. returns: Observable \r\n    put(path:string, value:any);\r\n\tput(context:string, path:string, value:any);\r\n    put(context:string, path:string, key:any, value:any);\r\n    put(c:string, p:any, k?:any, v?:any) { \r\n        if(!this.endpoint) { return }\r\n        let context:string;\r\n        let path:string;\r\n        let msg = { value: {} } \r\n        // ** path / value\r\n        if(typeof k=='undefined' && typeof v=='undefined') {\r\n            if(c[0]=='/') { c= c.slice(1) }\r\n            path= Path.dotToSlash(c);\r\n            context= '';\r\n            msg.value= p;\r\n        }\r\n        // ** context / path / value\r\n        else if(typeof v=='undefined') { \r\n            context= (c) ? Path.contextToPath(c) : '';\r\n            path=Path.dotToSlash(p);\r\n            msg.value= k;\r\n        }\r\n        else {  // ** context / path / key / value\r\n            context= (c) ? Path.contextToPath(c) : '';\r\n            let t= Path.dotToSlash(p).split('/');\r\n            t.push(k);\r\n            path= t.join('/');\r\n            msg.value= v;\r\n        }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        \r\n        // ** patch for node server PUT handling of resources\r\n        let r= path.split('/');\r\n        if(r[0]=='resources') { \r\n            context= '';  \r\n            if(this.server && this.server.id=='signalk-server-node') { // ** check for node server\r\n                //let ver= this.server.info['version'].split('.');\r\n                //if(ver[1]<100) { // detect older versions\r\n                    // ** re-format value { uuid: { <resource_data> }}\r\n                    let v= JSON.parse(JSON.stringify(msg.value));\r\n                    msg.value= {}\r\n                    msg.value[r[r.length-1]]=v;\r\n                    // ** add self context and remove uuid from path\r\n                    path= 'vessels/self/' + r.slice(0, r.length-1).join('/');\r\n                //}\r\n            }\r\n        }\r\n        // ****************************************\r\n\r\n        context= (context) ? context + '/' : '';\r\n        let url= this.endpoint + context + Path.dotToSlash(path);\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.put(url, msg, { headers: headers } );\r\n        }        \r\n        else { return this.http.put(url, msg) }\r\n    } \r\n\r\n    //** send value to API path via http POST. returns: Observable \r\n    post(path:string, value:any) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= `${this.endpoint}${Path.dotToSlash(path)}`;\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.post(url, value, { headers: headers } );\r\n        }        \r\n        else { return this.http.post(url, value) }\r\n    }     \r\n\r\n    //** delete value from API path via http DELETE. returns: Observable \r\n    delete(path:string) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= `${this.endpoint}${Path.dotToSlash(path)}`;\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.delete(url, { headers: headers } );\r\n        }        \r\n        else { return this.http.delete(url) }\r\n    }\r\n\r\n} ","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Message, Alarm, AlarmType } from './utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKStream {\r\n\r\n\tprivate _connect: Subject<any>;\r\n    private _close: Subject<any>;\r\n\tprivate _error: Subject<any>;\r\n    private _message: Subject<any>;\r\n\r\n    private ws: any;    \r\n    private _filter= null;               // ** id of vessel to filter delta messages\r\n    private _wsTimeout= 20000;           // ** websocket connection timeout  \r\n    private _token: string;  \r\n    private _playbackMode: boolean= false;\r\n    \r\n   // **************** ATTRIBUTES ***************************\r\n\r\n    public onConnect: Observable<any>;\t\t\r\n    public onClose: Observable<any>;\t\r\n    public onError: Observable<any>; \t\r\n    public onMessage: Observable<any>;\r\n\r\n    public endpoint: string;\r\n    public selfId: string;\r\n    public _source: any= null;\r\n\r\n    // ** set source label for use in messages\r\n    set source(val:string) { \r\n        if(!this._source) { this._source= {} }\r\n        this._source['label']= val;\r\n    }\r\n\r\n    // ** set auth token value **\r\n    set authToken(val:string) { this._token= val }    \r\n    // ** get / set websocket connection timeout 3000<=timeout<=60000 **\r\n    get connectionTimeout():number { return this._wsTimeout }\r\n    set connectionTimeout(val:number) {\r\n        this._wsTimeout= (val<3000) ? 3000 : (val>60000) ? 60000 : val;\r\n    }   \r\n    // ** is WS Stream connected?\r\n    get isOpen():boolean { \r\n        return (this.ws && (this.ws.readyState!=1 && this.ws.readyState!=3) ) ? true : false;\r\n    }  \r\n    // ** get / set filter to select delta messages just for supplied vessel id   \r\n    get filter():string { return this._filter }\r\n    // ** set filter= null to remove message filtering\r\n    set filter(id:string) { \r\n        if( id && id.indexOf('self')!=-1 ) {  // ** self\r\n            this._filter= (this.selfId) ? this.selfId : null;\r\n        }\r\n        else { this._filter= id }\r\n    }   \r\n    // ** returns true if Playback Hello message\r\n    get playbackMode():boolean { return this._playbackMode }\r\n\r\n    // ******************************************************\r\n\r\n    constructor( ) { \r\n        this._connect= new Subject<any>();\r\n        this.onConnect= this._connect.asObservable();   \r\n        this._close= new Subject<any>();\r\n        this.onClose= this._close.asObservable();  \r\n        this._error= new Subject<any>();\r\n        this.onError= this._error.asObservable();  \r\n        this._message= new Subject<any>();\r\n        this.onMessage= this._message.asObservable();         \r\n    }   \r\n\r\n    // ** Close WebSocket connection\r\n    close() { if(this.ws) { this.ws.close(); this.ws= null; } }\r\n   \r\n\t// ** Open a WebSocket at provided url\r\n\topen(url:string, subscribe?:string, token?:string) {\r\n        url= (url) ? url : this.endpoint;\r\n        if(!url) { return }\r\n        let q= (url.indexOf('?')==-1) ? '?' : '&'\r\n        if(subscribe) { url+=`${q}subscribe=${subscribe}` } \r\n        if(this._token || token) { url+= `${(subscribe) ? '&' : '?'}token=${this._token || token}` } \r\n        \r\n        this.close();\r\n        this.ws = new WebSocket(url);\r\n        // ** start connection watchdog **\r\n        setTimeout( \r\n            ()=>{\r\n                if(this.ws && (this.ws.readyState!=1 && this.ws.readyState!=3) ) { \r\n                    console.warn(`Connection watchdog expired (${this._wsTimeout/1000} sec): ${this.ws.readyState}... aborting connection...`);\r\n                    this.close(); \r\n                }\r\n            }, this._wsTimeout\r\n        );\r\n\t\t\r\n\t\tthis.ws.onopen= e=> { this._connect.next(e) }\r\n\t\tthis.ws.onclose= e=> { this._close.next(e) }\r\n\t\tthis.ws.onerror= e=> { this._error.next(e) }\r\n\t\tthis.ws.onmessage= e=> {this.parseOnMessage(e) }\r\n    }  \r\n    \r\n    // ** parse received message\r\n    private parseOnMessage(e) {\r\n        let data: any;\r\n        if(typeof e.data === 'string') {\r\n            try { data= JSON.parse(e.data) }\r\n            catch(e) { return }\r\n        }\r\n        if(this.isHello(data)) { \r\n            this.selfId= data.self;\r\n            this._playbackMode= (typeof data.startTime!= 'undefined') ? true : false;                 \r\n            this._message.next(data);\r\n        }      \r\n        else if(this.isResponse(data)) { \r\n            if(typeof data.login !== 'undefined') {\r\n                if(typeof data.login.token !== 'undefined') { this._token= data.login.token }\r\n            }                \r\n            this._message.next(data);\r\n        }             \r\n        else if(this._filter && this.isDelta(data)) {\r\n            if(data.context== this._filter) { this._message.next(data) } \r\n        }                \r\n        else { this._message.next(data) } \r\n    }\r\n\r\n    // ** send request via Delta stream\r\n    sendRequest(value:any):string {\r\n        if(typeof value !== 'object') { return null }\r\n        let msg= Message.request();\r\n        if(typeof value.login === 'undefined' && this._token) { msg['token']= this._token }\r\n        let keys= Object.keys(value);\r\n        keys.forEach( k=> { msg[k]= value[k] });\r\n        this.send(msg);\r\n        return msg.requestId;\r\n    }\r\n\r\n    // ** send put request via Delta stream\r\n    put(context:string, path:string, value:any):string {\r\n        let msg= {\r\n            context: (context=='self') ? 'vessels.self' : context,\r\n            put: { path: path, value: value }\r\n        };\r\n        return this.sendRequest(msg);\r\n    }    \r\n\r\n    // ** get auth token for supplied user details **\r\n    login(username:string, password:string) {\r\n        let msg= { \r\n            login: { \"username\": username, \"password\": password } \r\n        };\r\n        return this.sendRequest(msg);\r\n    }\r\n\r\n    // ** send data to Signal K stream\r\n    send(data:any) {\r\n        if(this.ws) {\r\n            if(typeof data === 'object') { data= JSON.stringify(data) }\r\n            this.ws.send(data);\r\n        }\r\n    }\r\n\r\n    // ** send value(s) via delta stream update **\r\n    sendUpdate(context:string, path:Array<any>);\r\n    sendUpdate(context:string, path:string, value:any);\r\n    sendUpdate(context:string='self', path: string | Array<any>, value?:any) {\r\n        let val= Message.updates();\r\n        if(this._token) { val['token']= this._token }\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        let uValues= [];\r\n        if(typeof path === 'string') {\r\n            uValues.push({ path: path, value: value });\r\n        }\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n            uValues= path;\r\n        }\r\n        let u= { \r\n            timestamp: new Date().toISOString(), \r\n            values: uValues \r\n        }\r\n        if(this._source) { u['source']= this._source }\r\n        val.updates.push( u ); \r\n        this.send(val);\r\n    }\r\n\r\n    // ** Subscribe to Delta stream messages options: {..}**\r\n    subscribe(context:string, path:Array<any>);\r\n    subscribe(context:string, path:string, options?:any);\r\n    subscribe(context:string='*', path:string | Array<any>='*', options?:any) {\r\n        let val= Message.subscribe();\r\n        if(this._token) { val['token']= this._token }\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n           val.subscribe= path;\r\n        }\r\n        if(typeof path === 'string') {\r\n            let sValue= {};\r\n            sValue['path']= path;\r\n            if(options && typeof options === 'object') {\r\n                if(options['period']) { sValue['period']= options['period'] }\r\n                if(options['minPeriod']) { sValue['minPeriod']= options['period'] }\r\n                if(options['format'] && \r\n                    (options['format']=='delta' || options['format']=='full') ) { \r\n                        sValue['format']= options['format'];\r\n                }\r\n                if(options['policy'] && \r\n                    (options['policy']=='instant' || options['policy']=='ideal'\r\n                    || options['policy']=='fixed') ) { \r\n                        sValue['policy']= options['policy'];\r\n                }\r\n            }\r\n            val.subscribe.push(sValue);\r\n        }\r\n        this.send(val);        \r\n    }\r\n\r\n    // ** Unsubscribe from Delta stream messages **\r\n    unsubscribe(context:string='*', path:any='*') {\r\n        let val= Message.unsubscribe();\r\n        if(this._token) { val['token']= this._token }\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n           val.unsubscribe= path;\r\n        }\r\n        if(typeof path === 'string') { val.unsubscribe.push({path: path}) }\r\n        this.send(val); \r\n    }\r\n\r\n    // ** raise alarm for path\r\n    raiseAlarm(context:string, name:string, alarm:Alarm);\r\n    raiseAlarm(context:string, type:AlarmType, alarm:Alarm);\r\n    raiseAlarm(context:string='*', alarmId:any, alarm:Alarm) {\r\n        let n:string;\r\n        if(typeof alarmId === 'string') {\r\n            n=(alarmId.indexOf('notifications.')==-1) ? `notifications.${alarmId}` : alarmId;\r\n        }\r\n        else { n= alarmId }\r\n        this.sendUpdate(context, n, alarm.value );\r\n    }\r\n\r\n    // ** raise alarm for path\r\n    clearAlarm(context:string='*', name:string) {\r\n        let n=(name.indexOf('notifications.')==-1) ? `notifications.${name}` : name;\r\n        this.sendUpdate(context, n, null);\r\n    }    \r\n\r\n    // *************** MESSAGE PARSING ******************************\r\n    // ** returns true if message context is 'self'\r\n    isSelf(msg:any):boolean { return (msg.context== this.selfId) }\r\n    // ** returns true if message is a Delta message\r\n    isDelta(msg:any):boolean { return typeof msg.context!= 'undefined' }\r\n    // ** returns true if message is a Hello message\r\n    isHello(msg:any):boolean { \r\n        return (typeof msg.version!= 'undefined' && typeof msg.self!= 'undefined');\r\n    }     \r\n    // ** returns true if message is a request Response message\r\n    isResponse(msg:any):boolean { return typeof msg.requestId!= 'undefined' } \r\n}","/** Signal K server Apps\r\n * ************************************/\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKApps  {\r\n\r\n   // **************** ATTRIBUTES ***************************\r\n\t\r\n    // ** apps api endpoint path\r\n    public endpoint: string;\r\n\r\n   // *******************************************************    \r\n\r\n    constructor(private http: HttpClient) { } \r\n\r\n    ngOnDestroy() { }\r\n    \r\n    // ** return List of installed apps\r\n    list() { \r\n        let ep= (this.endpoint.indexOf('webapps')==-1) ?\r\n            `${this.endpoint}list` : this.endpoint;\r\n        return this.http.get(ep);\r\n    }\r\n    \r\n}","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject, Observable, of } from 'rxjs';\n\nimport { SignalKHttp } from './http-api';\nimport { SignalKStream } from './stream-api';\nimport { SignalKApps } from './apps-api';\nimport { Path, Message } from './utils';\nimport { UUID } from './uuid';\n\ninterface Server_Info {\n    endpoints: any;\n    info: any,\n    apiVersions: Array<any>;\n}\n\ninterface JSON_Patch {\n    op: 'add' | 'replace' | 'remove' | 'copy' | 'move' | 'test';\n    path: string;\n    value: any;\n}\n\nexport enum APPDATA_CONTEXT {\n    USER= 'user',\n    GLOBAL= 'global'\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SignalKClient {\n    \n    private hostname: string;\n    private port: number;\n    private protocol: string;\n  \n    private _version: string= 'v1';      // ** default Signal K api version\n    private _token: string;             // token for when security is enabled on the server\n\n    private debug(val: any) { if(isDevMode()){ console.log(val) } }\n\n    // ** endpoints to fallback to if hello response is not received.\n    private fallbackEndpoints= {\n        endpoints: { v1: { } },\n        server: { id : \"fallback\" }\n    };    \n\n    // **************** ATTRIBUTES ***************************  \n\n    // ** server information block **\n    public server: Server_Info= {\n        endpoints: {},\n        info: {},\n        apiVersions: []\n    }  \n\n    // ** endpoints fallback to host address when no hello response\n    public fallback:boolean= false;\n\n    // ** get / set Signal K preferred api version to use **\n    get version():number { return parseInt( this._version.slice(1) ) }\n    set version(val: number) {\n        let v:string= 'v'+ val;\n        if(this.server.apiVersions.length==0) { \n            this._version= v;\n            this.debug(`Signal K api version set to: ${v}`);\n        }\n        else {\n            this._version= (this.server.apiVersions.indexOf(v)!=-1) ? v : this._version;\n            this.debug(`Signal K api version set request: ${v}, result: ${this._version}`);\n        }\n    }\n    // ** set auth token value **\n    set authToken(val:string) { \n        this._token= val;\n        this.api.authToken= val;\n        this.stream.authToken= val;\n    }    \n    // ** Message Object\n    get message() { return Message }\n\n    // ** generate and return a UUID object\n    get uuid():UUID { return new UUID() }\n\n    // *******************************************************\n    constructor( private http: HttpClient, \n                public apps: SignalKApps,\n                public api: SignalKHttp, \n                public stream: SignalKStream ) { \n        this.init();                          \n    }\n\n    ngOnDestroy() { this.stream.close() }   \n    \n    // ** initialise protocol, hostname, port values\n    private init(hostname:string='localhost', port:number=null, useSSL:boolean=false) {\n        this.hostname = hostname;\n        if(useSSL) {\n            this.protocol = 'https';\n            this.port = port || 443;\n        } \n        else {\n            this.protocol = 'http';\n            this.port = port || 80;\n        }   \n        let url= `${this.protocol}://${this.hostname}:${this.port}`;  \n        this.fallbackEndpoints.endpoints.v1['signalk-http']= `${url}/signalk/v1/api/`;\n        this.fallbackEndpoints.endpoints.v1['signalk-ws']= `${url}/signalk/v1/stream`;\n    }    \n\n    // **************** CONNECTION AND DISCOVERY  ********************\n\n    // ** Signal K server endpoint discovery request (/signalk).  \n    hello(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        this.init(hostname, port, useSSL);\n        return this.get('/signalk');\n    }    \n\n\n    // ** connect to server (endpoint discovery) and DO NOT open Stream\n    connectAsPromise(hostname:string=null, port:number=null, useSSL:boolean=false):Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.debug('Contacting Signal K server.........');\n            this.hello(hostname, port, useSSL).subscribe(    // ** discover endpoints **\n                response=> { \n                    this.getLoginStatus().subscribe( r=>{} );\n                    if(this.stream) { this.stream.close() }\n                    this.processHello(response);\n                    this.api.endpoint= this.resolveHttpEndpoint();\n                    this.stream.endpoint= this.resolveStreamEndpoint();\n                    resolve(true);\n                },\n                error=> { \n                    if(this.fallback) { // fallback if no hello response\n                        if(this.stream) { this.stream.close() }\n                        this.processHello(null);\n                        this.api.endpoint= this.resolveHttpEndpoint();\n                        this.stream.endpoint= this.resolveStreamEndpoint();\n                        resolve(true);                   \n                    }\n                    else {\n                        this.disconnectedFromServer();       \n                        reject(error);\n                    }\n                }\n            );\n        });\n    }    \n\n    // ** connect to server (endpoint discovery) and DO NOT open Stream\n    connect(hostname:string=null, port:number=null, useSSL:boolean=false):Observable<any> {\n        let sub: Subject<any>= new Subject();\n        this.debug('Contacting Signal K server.........');\n        this.hello(hostname, port, useSSL).subscribe(    // ** discover endpoints **\n            response=> { \n                this.getLoginStatus().subscribe( r=>{} );\n                if(this.stream) { this.stream.close() }\n                this.processHello(response);\n                this.api.endpoint= this.resolveHttpEndpoint();\n                this.stream.endpoint= this.resolveStreamEndpoint();\n                sub.next(true);\n            },\n            error=> { \n                if(this.fallback) { // fallback if no hello response\n                    if(this.stream) { this.stream.close() }\n                    this.processHello(null);\n                    this.api.endpoint= this.resolveHttpEndpoint();\n                    this.stream.endpoint= this.resolveStreamEndpoint();\n                    sub.next(true);                    \n                }\n                else {\n                    this.disconnectedFromServer();       \n                    sub.error(error);\n                }\n            }\n        );\n        return sub.asObservable();\n    }  \n\n    // ** disconnect from server\n    disconnect() { this.stream.close()} \n    \n    // ** Connect + open Delta Stream (endpoint discovery)\n    connectStreamAsPromise(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null):Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.connectAsPromise(hostname, port, useSSL)\n            .then( ()=> { \n                // ** connect to stream api at preferred version else fall back to default version\n                let url= this.resolveStreamEndpoint();\n                if(!url) { \n                    reject( new Error('Server has no advertised Stream endpoints!') );\n                    return;\n                }\n                this.stream.open(url, subscribe);\n                resolve( true );\n            })\n            .catch( e=> { reject( e ) });\n        });\n    } \n\n    // ** Connect + open Delta Stream (endpoint discovery)\n    connectStream(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null):Observable<any> {\n        let sub: Subject<any>= new Subject();\n        this.connect(hostname, port, useSSL).subscribe( \n            ()=> { \n                // ** connect to stream api at preferred version else fall back to default version\n                let url= this.resolveStreamEndpoint();\n                if(!url) { \n                    sub.error( new Error('Server has no advertised Stream endpoints!') );\n                    return;\n                }\n                this.stream.open(url, subscribe);\n                sub.next( true );\n            },\n            e=> { sub.error( e ) }\n        );\n        return sub.asObservable();\n    }\n\n    // ** connect to playback stream (endpoint discovery)\n    connectPlaybackAsPromise(hostname:string=null, port:number=null, useSSL:boolean=false, options:any):Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.connectAsPromise(hostname, port, useSSL)\n            .then( ()=> { \n                // ** connect to playback api at preferred version else fall back to default version\n                this.openPlayback(null, options, this._token);\n                resolve( true );\n            })\n            .catch( e=> { reject( e ) });\n        })\n    }\n\n    // ** connect to playback stream (endpoint discovery)\n    connectPlayback(hostname:string=null, port:number=null, useSSL:boolean=false, options:any):Observable<any> {\n        let sub: Subject<any>= new Subject();\n        this.connect(hostname, port, useSSL).subscribe( \n            ()=> { \n                // ** connect to playback api at preferred version else fall back to default version\n                this.openPlayback(null, options, this._token);\n                sub.next( true );\n            },\n            e=> { sub.error( e ) }\n        );\n        return sub.asObservable();\n    }      \n\n    // ** connect to delta stream with (NO endpoint discovery)\n    openStream(url:string=null, subscribe?:string, token?:string) {\n        this.debug('openStream.........');  \n        if(!url) {     // connect to stream api at discovered endpoint\n            url= this.resolveStreamEndpoint();\n            if(!url) { \n                return( new Error('Server has no advertised Stream endpoints!') );\n            }\n        }\n        this.stream.open(url, subscribe, token);  \n        return true;      \n    }   \n\n    // ** connect to playback stream (NO endpoint discovery)\n    openPlayback(url:string=null, options?:any, token?:string) {\n        this.debug('openPlayback.........');\n        if(!url) {     // connect to stream api at discovered endpoint\n            url= this.resolveStreamEndpoint();\n            if(!url) { \n                return( new Error('Server has no advertised Stream endpoints!') );\n            }\n            url= url.replace('stream', 'playback');\n        }        \n        let pb= '';\n        let subscribe: string;\n        if(options && typeof options ==='object'){\n            pb+= (options.startTime) ? '?startTime=' + options.startTime.slice(0,options.startTime.indexOf('.')) + 'Z' : '';\n            pb+= (options.playbackRate) ? `&playbackRate=${options.playbackRate}` : '';\n            subscribe= (options.subscribe) ? options.subscribe : null;            \n        }\n        this.stream.open(url + pb, subscribe, token); \n        return true;\n    }      \n\n    // ** process Hello response \n    private processHello(response: any) {\n        this.server.endpoints= (response && response['endpoints']) ? \n            response['endpoints'] : this.fallbackEndpoints.endpoints;\n        this.server.info= (response && response['server']) ? \n            response['server'] : this.fallbackEndpoints.server;\n        this.server.apiVersions= (this.server.endpoints) ? Object.keys(this.server.endpoints) : [];\n        this.debug(this.server.endpoints);\n        this.api.server= this.server.info;\n        this.apps.endpoint= this.resolveAppsEndpoint();\n    }\n\n    // ** return signalk apps api url\n    private resolveAppsEndpoint():string {      \n        let url:string= this.resolveHttpEndpoint().replace('api','apps');  \n        if(this.server && this.server.info.id=='signalk-server-node') { \n            let ver= this.server.info['version'].split('.');\n            if(ver[1]<26) { //use legacy link for older versions\n                url= `${this.protocol}://${this.hostname}:${this.port}/webapps`;\n            }\n        }\n        return url;\n    } \n\n    // ** return preferred WS stream url\n    public resolveStreamEndpoint():string {\n        if(this.server.endpoints[this._version] && this.server.endpoints[this._version]['signalk-ws']) {\n            this.debug(`Connecting endpoint version: ${this._version}`);\n            return `${this.server.endpoints[this._version]['signalk-ws']}`;\n        }\n        else if(this.server.endpoints['v1'] && this.server.endpoints['v1']['signalk-ws']) { \n            this.debug(`Connection falling back to: v1`);\n            return `${this.server.endpoints['v1']['signalk-ws']}` \n        }\n        else { return null }\n    }  \n\n    // ** return signalk-http endpoint url\n    private resolveHttpEndpoint():string {\n        let url: string;\n        if(this.server.endpoints[this._version]) { // ** connection made\n            // ** connect to http endpoint at prescribed version else fall back to default version\n            if(this.server.endpoints[this._version]['signalk-http']) {\n                url= `${this.server.endpoints[this._version]['signalk-http']}`;\n            }\n            else { url= `${this.server.endpoints['v1']['signalk-http']}` }   \n        } \n        else {\n            let msg= 'No current connection http endpoint service! Use connect() to establish a connection.'\n            this.debug(msg);\n        } \n        return url;   \n    }    \n    \n    // ** cleanup on server disconnection\n    private disconnectedFromServer() {\n        this.server.endpoints= {};\n        this.server.info= {};\n        this.server.apiVersions= [];  \n    }\n\n    //** return observable response from http path\n    get(path:string) { \n        if(path && path.length>0 && path[0]=='/') { path= path.slice(1) }\n        let url= `${this.protocol}://${this.hostname}:${this.port}/${Path.dotToSlash(path)}`;\n        this.debug(`get ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }        \n    };  \n\n    //** return observable response for put to http path\n    put(path:string, value:any) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}/${Path.dotToSlash(path)}`;\n        this.debug(`put ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.put( url, value, { headers: headers } );\n        }\n        else { return this.http.put(url, value) }        \n    };\n\n    //** return observable response for post to http path\n    post(path:string, value:any) { \n        if(path && path.length>0 && path[0]=='/') { path= path.slice(1) }\n        let url= `${this.protocol}://${this.hostname}:${this.port}/${Path.dotToSlash(path)}`;\n        this.debug(`post ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post( url, value, { headers: headers } );\n        }\n        else { return this.http.post(url, value) }        \n    };   \n\n    // ** get auth token for supplied user details **\n    login(username:string, password:string) {\n        let headers= new HttpHeaders().set('Content-Type', `application/json`);\n        return this.http.post(\n            `${this.protocol}://${this.hostname}:${this.port}/signalk/${this._version}/auth/login`,\n            { \"username\": username, \"password\": password },\n            { headers }\n        );\n    }\n\t\n    // ** logout from server **\n    logout():Observable<boolean> { \n        let sub: Subject<boolean>= new Subject();;\n\t\tlet url=`${this.protocol}://${this.hostname}:${this.port}/signalk/${this._version}/auth/logout`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}`} );\n            this.http.put( url, null, { headers: headers, responseType: 'text' } ).subscribe(\n                ()=> { sub.next(true) },\n                ()=> { sub.next(false) }\n            );\n        }        \n        else { \n            this.http.put( url, null, {responseType: 'text'} ).subscribe(\n                ()=> { sub.next(true) },\n                ()=> { sub.next(false) }\n            );\n        }\n        return sub.asObservable();\n    }\t  \n    \n    // ** is a user authenticated to the server **\n    isLoggedIn():Observable<boolean> {\n        let sub: Subject<boolean>= new Subject();    \n        this.getLoginStatus().subscribe(\n            r=> { sub.next( r.status=='loggedIn' ? true : false ) },\n            ()=> { sub.next(false) } \n        );\n        return sub.asObservable();\n    }\n    // ** fetch login status from server **\n    getLoginStatus():Observable<any> { return this.get('/loginstatus') }    \n    \n    //** get data via the snapshot http api path for supplied time\n    snapshot(context:string, time:string) { \n        if(!time) { return }\n        time= time.slice(0,time.indexOf('.')) + 'Z';\n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        url= `${url.replace('api','snapshot')}${Path.contextToPath(context)}?time=${time}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }\n    }\n    \n    /*******************************\n     *  applicationData api methods \n     * context: 'user' or 'global'\n     * appId: application id string\n     *******************************/\n    private _appId:string;\n    private _appVersion:string;\n\n    private resolveAppDataEndpoint(context:APPDATA_CONTEXT, appId:string) {\n        if(!context || !appId) { return null }\n        let url:string= this.resolveHttpEndpoint().replace('api','applicationData');\n        return `${url}${context}/${appId}/`;\n    }\n\n    setAppId(value:string) { this._appId= value }\n    setAppVersion(value:string) { this._appVersion= value }\n\n    // ** get list of available versions of data stored **\n    appDataVersions(context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId) {\n        let url= this.resolveAppDataEndpoint(context, appId);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }     \n    }\n    // ** get list of available keys for a stored path **\n    appDataKeys(path:string='', context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        path= (path.length!=0 && path[0]=='/') ? path.slice(1) : path;\n        let url= this.resolveAppDataEndpoint(context, appId);\n        url+= `${version}/${path}?keys=true`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }     \n    }    \n\n    // ** get stored value at provided path **\n    appDataGet(path:string='', context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        path= (path.length!=0 && path[0]=='/') ? path.slice(1) : path;\n        let url= this.resolveAppDataEndpoint(context, appId);\n        url+= `${version}/${path}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }     \n    }\n\n    // ** set stored value at provided path **\n    appDataSet(path:string, value:any, context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        if(!path) { return }\n        if(path[0]=='/') { path= path.slice(1) }\n        let ep= this.resolveAppDataEndpoint(context, appId);\n        if(!ep) { return }\n        let url= `${ep}${version}/${Path.dotToSlash(path)}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post(url, value, { headers: headers } );\n        }        \n        else { return this.http.post(url, value) }\n    }    \n    \n    // ** update / patch stored values using Array of JSON patch objects **\n    appDataPatch(value:Array<JSON_Patch>, context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        let ep= this.resolveAppDataEndpoint(context, appId);\n        if(!ep || !version ) { return }\n        let url= `${ep}${version}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post(url, value, { headers: headers } );\n        }        \n        else { return this.http.post(url, value) }\n    }    \n\n}\n","/*****************************\r\n * SignalKClient Module:\r\n *****************************/\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [ HttpClientModule ],    \r\n    declarations: [],\r\n    exports: [],\r\n    entryComponents: [], \r\n    providers: []  \r\n})\r\nexport class SignalKClientModule {}\r\n\r\nexport * from './signalk-client';\r\nexport * from './utils';\r\nexport * from './stream-api';\r\nexport * from './http-api';\r\nexport * from './apps-api';"],"names":["HttpHeaders","Injectable","HttpClient","Subject","isDevMode","NgModule","HttpClientModule"],"mappings":"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"}