{"version":3,"file":"signalk-client-angular.js","sources":["ng://signalk-client-angular/lib/uuid.ts","ng://signalk-client-angular/lib/utils.ts","ng://signalk-client-angular/lib/http-api.ts","ng://signalk-client-angular/lib/stream-api.ts","ng://signalk-client-angular/lib/apps-api.ts","ng://signalk-client-angular/lib/signalk-client.ts","ng://signalk-client-angular/lib/signalk-client.module.ts"],"sourcesContent":["/*\r\n * UUID: A js library to generate and parse UUIDs, TimeUUIDs and generate\r\n * TimeUUID based on dates for range selections.\r\n * @see http://www.ietf.org/rfc/rfc4122.txt\r\n **/\r\nexport class UUID {\r\n\r\n    private limitUI04;\r\n    private limitUI06;\r\n    private limitUI08;\r\n    private limitUI12;\r\n    private limitUI14;\r\n    private limitUI16;\r\n    private limitUI32;\r\n    private limitUI40;\r\n    private limitUI48;\r\n\r\n    private version:number;\r\n    private hex:string;\r\n\r\n    constructor() {\r\n        this.limitUI04 = this.maxFromBits(4);\r\n        this.limitUI06 = this.maxFromBits(6);\r\n        this.limitUI08 = this.maxFromBits(8);\r\n        this.limitUI12 = this.maxFromBits(12);\r\n        this.limitUI14 = this.maxFromBits(14);\r\n        this.limitUI16 = this.maxFromBits(16);\r\n        this.limitUI32 = this.maxFromBits(32);\r\n        this.limitUI40 = this.maxFromBits(40);\r\n        this.limitUI48 = this.maxFromBits(48); \r\n\r\n        this.create();\r\n    }\r\n\r\n    toString() { return this.hex }\r\n    toURN() { return 'urn:uuid:' + this.hex }\r\n    toSignalK():string  { return `urn:mrn:signalk:uuid:${this.hex}` }\r\n    toBytes() {\r\n        let parts = this.hex.split('-');\r\n        let ints = [];\r\n        let intPos = 0;\r\n        for (let i = 0; i < parts.length; i++) {\r\n            for (let j = 0; j < parts[i].length; j+=2) {\r\n            ints[intPos++] = parseInt(parts[i].substr(j, 2), 16);\r\n            }\r\n        }\r\n        return ints;\r\n    };    \r\n\r\n    private maxFromBits(bits) { return Math.pow(2, bits) };\r\n\r\n    private getRandomInt(min, max) { return Math.floor(Math.random() * (max - min + 1)) + min }\r\n\r\n    private randomUI04() { return this.getRandomInt(0, this.limitUI04-1) }\r\n    private randomUI06() { return this.getRandomInt(0, this.limitUI06-1);}\r\n    private randomUI08() { return this.getRandomInt(0, this.limitUI08-1) }\r\n    private randomUI12() { return this.getRandomInt(0, this.limitUI12-1) }\r\n    private randomUI14() { return this.getRandomInt(0, this.limitUI14-1) }\r\n    private randomUI16() { return this.getRandomInt(0, this.limitUI16-1) }\r\n    private randomUI32() { return this.getRandomInt(0, this.limitUI32-1) }\r\n    private randomUI40() { return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 40 - 30)) * (1 << 30) }\r\n    private randomUI48() { return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 48 - 30)) * (1 << 30) }\r\n\r\n    private create() {\r\n        this.fromParts(\r\n            this.randomUI32(),\r\n            this.randomUI16(),\r\n            0x4000 | this.randomUI12(),\r\n            0x80   | this.randomUI06(),\r\n            this.randomUI08(),\r\n            this.randomUI48()\r\n        );\r\n    };\r\n\r\n    private paddedString(string, length, z=null) {\r\n        string = String(string);\r\n        z = (!z) ? '0' : z;\r\n        let i = length - string.length;\r\n        for (; i > 0; i >>>= 1, z += z) {\r\n            if (i & 1) {\r\n            string = z + string;\r\n            }\r\n        }\r\n        return string;\r\n    };\r\n\r\n    private fromParts(timeLow, timeMid, timeHiAndVersion, clockSeqHiAndReserved, clockSeqLow, node) {\r\n        this.version = (timeHiAndVersion >> 12) & 0xF;\r\n        this.hex = this.paddedString(timeLow.toString(16), 8)\r\n            + '-'\r\n            + this.paddedString(timeMid.toString(16), 4)\r\n            + '-'\r\n            + this.paddedString(timeHiAndVersion.toString(16), 4)\r\n            + '-'\r\n            + this.paddedString(clockSeqHiAndReserved.toString(16), 2)\r\n            + this.paddedString(clockSeqLow.toString(16), 2)\r\n            + '-'\r\n            + this.paddedString(node.toString(16), 12);\r\n        return this;\r\n    };    \r\n\r\n};","import { UUID } from './uuid';\r\n\r\n// ** Path utilities\r\nexport class Path {\r\n\r\n    // ** transform dot notation to slash\r\n    static dotToSlash(path:string):string {\r\n        let p= path.split('?');\r\n        if(p[0].indexOf('.')!=-1) { \r\n            p[0]= p[0].split('.').join('/');\r\n        }\r\n        return p.join('?');\r\n    }\r\n\r\n    // ** parse context to valid Signal K path\r\n    static contextToPath(context:string):string {\r\n        let res= (context=='self' ) ? 'vessels.self': context;\r\n        return res.split('.').join('/');\r\n    }    \r\n\r\n}\r\n\r\n// ** Message templates **\r\nexport class Message {\r\n   \r\n    // ** return UPDATES message object\r\n    static updates() { \r\n        // array values= { values: [ {path: xx, value: xx } ] }\r\n        return { \r\n            context: null,\r\n            updates: [] \r\n        }\r\n    }\r\n    // ** return SUBSCRIBE message object\r\n    static subscribe() { \r\n        /* array values= {\r\n            \"path\": \"path.to.key\",\r\n            \"period\": 1000,\r\n            \"format\": \"delta\",\r\n            \"policy\": \"ideal\",\r\n            \"minPeriod\": 200\r\n            } */\r\n        return { \r\n            context: null,\r\n            subscribe: [] \r\n        }\r\n    }    \r\n    // ** return UNSUBSCRIBE message object\r\n    static unsubscribe() { \r\n        // array values= { \"path\": \"path.to.key\" }\r\n        return { \r\n            context: null,\r\n            unsubscribe: [] \r\n        }\r\n    }  \r\n    // ** return REQUEST message object\r\n    static request() { \r\n        return { \r\n            requestId: new UUID().toString()\r\n        }\r\n    }           \r\n\r\n}\r\n\r\n// ** Alarm message **\r\nexport class Alarm {\r\n\r\n    private _state:AlarmState;\r\n    private _method:Array<AlarmMethod>= [];\r\n    private _message:string='';\r\n\r\n    constructor(message:string, state?:AlarmState, visual?:boolean, sound?:boolean) {\r\n        this._message= (typeof message!== 'undefined') ? message : '';\r\n        this._state= (typeof state!== 'undefined') ? state : AlarmState.alarm;\r\n        if(visual) { this._method.push(AlarmMethod.visual)};\r\n        if(sound) { this._method.push(AlarmMethod.sound)};\r\n    }\r\n\r\n    get value() {\r\n        return {\r\n            message: this._message,\r\n            state: this._state,\r\n            method: this._method\r\n        }\r\n    }  \r\n}\r\n\r\nexport enum AlarmState {\r\n    normal= 'normal',\r\n    alert= 'alert',\r\n    warn= 'warn',\r\n    alarm= 'alarm',\r\n    emergency= 'emergency'\r\n};\r\n\r\nexport enum AlarmMethod {\r\n    visual= 'visual',\r\n    sound= 'sound'\r\n};\r\n\r\nexport enum AlarmType {\r\n    mob= 'notifications.mob',\r\n    fire= 'notifications.fire',\r\n    sinking= 'notifications.sinking',\r\n    flooding= 'notifications.flooding',\r\n    collision= 'notifications.collision',\r\n    grounding= 'notifications.grounding',\r\n    listing= 'notifications.listing',\r\n    adrift= 'notifications.adrift',\r\n    piracy= 'notifications.piracy',\r\n    abandon= 'notifications.abandon'\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Path } from './utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKHttp {\r\n\r\n    private _token: string;\r\n\r\n    // **************** ATTRIBUTES ***************************\r\n    public server: any;\r\n    public endpoint: string;\r\n    // ** set auth token value **\r\n    set authToken(val:string) { this._token= val }    \r\n\r\n    // *******************************************************\r\n\r\n    constructor( private http: HttpClient ) { }   \r\n    \r\n    // ** get the contents of the Signal K tree pointed to by self. returns: Observable \r\n    getSelf() { return this.get(`vessels/self`) }\r\n\r\n    //** get ID of vessel self via http. returns: Observable \r\n    getSelfId() { return this.get(`self`) }\r\n\r\n    // ** return observable response for meta object at the specified context and path\r\n    getMeta(context:string, path:string) { \r\n        return this.get(`${Path.contextToPath(context)}/${Path.dotToSlash(path)}/meta`);\r\n    }    \r\n\r\n    //** get API path value via http. returns: Observable \r\n    get(path:string) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= this.endpoint + Path.dotToSlash(path);\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.get( url, { headers: headers } );\r\n        }\r\n        else { return this.http.get(url) }\r\n    }\r\n\r\n    //** send value to API path via http PUT. returns: Observable \r\n    put(path:string, value:any);\r\n\tput(context:string, path:string, value:any);\r\n    put(context:string, path:string, key:any, value:any);\r\n    put(c:string, p:any, k?:any, v?:any) { \r\n        if(!this.endpoint) { return }\r\n        let context:string;\r\n        let path:string;\r\n        let msg = { value: {} } \r\n        // ** path / value\r\n        if(typeof k=='undefined' && typeof v=='undefined') {\r\n            if(c[0]=='/') { c= c.slice(1) }\r\n            path= Path.dotToSlash(c);\r\n            context= '';\r\n            msg.value= p;\r\n        }\r\n        // ** context / path / value\r\n        else if(typeof v=='undefined') { \r\n            context= (c) ? Path.contextToPath(c) : '';\r\n            path=Path.dotToSlash(p);\r\n            msg.value= k;\r\n        }\r\n        else {  // ** context / path / key / value\r\n            context= (c) ? Path.contextToPath(c) : '';\r\n            let t= Path.dotToSlash(p).split('/');\r\n            t.push(k);\r\n            path= t.join('/');\r\n            msg.value= v;\r\n        }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        \r\n        // ** patch for node server PUT handling of resources\r\n        let r= path.split('/');\r\n        if(r[0]=='resources') { \r\n            context= '';  \r\n            if(this.server && this.server.id=='signalk-server-node') { // ** check for node server\r\n                //let ver= this.server.info['version'].split('.');\r\n                //if(ver[1]<100) { // detect older versions\r\n                    // ** re-format value { uuid: { <resource_data> }}\r\n                    let v= JSON.parse(JSON.stringify(msg.value));\r\n                    msg.value= {}\r\n                    msg.value[r[r.length-1]]=v;\r\n                    // ** add self context and remove uuid from path\r\n                    path= 'vessels/self/' + r.slice(0, r.length-1).join('/');\r\n                //}\r\n            }\r\n        }\r\n        // ****************************************\r\n\r\n        context= (context) ? context + '/' : '';\r\n        let url= this.endpoint + context + Path.dotToSlash(path);\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.put(url, msg, { headers: headers } );\r\n        }        \r\n        else { return this.http.put(url, msg) }\r\n    } \r\n\r\n    //** send value to API path via http POST. returns: Observable \r\n    post(path:string, value:any) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= `${this.endpoint}${Path.dotToSlash(path)}`;\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.post(url, value, { headers: headers } );\r\n        }        \r\n        else { return this.http.post(url, value) }\r\n    }     \r\n\r\n    //** delete value from API path via http DELETE. returns: Observable \r\n    delete(path:string) { \r\n        if(!this.endpoint) { return }\r\n        if(path[0]=='/') { path= path.slice(1) }\r\n        let url= `${this.endpoint}${Path.dotToSlash(path)}`;\r\n        if(this._token) {\r\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\r\n            return this.http.delete(url, { headers: headers } );\r\n        }        \r\n        else { return this.http.delete(url) }\r\n    }\r\n\r\n} ","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Message, Alarm, AlarmType } from './utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKStream {\r\n\r\n\tprivate _connect: Subject<any>;\r\n    private _close: Subject<any>;\r\n\tprivate _error: Subject<any>;\r\n    private _message: Subject<any>;\r\n\r\n    private ws: any;    \r\n    private _filter= null;               // ** id of vessel to filter delta messages\r\n    private _wsTimeout= 20000;           // ** websocket connection timeout  \r\n    private _token: string;  \r\n    private _playbackMode: boolean= false;\r\n    \r\n   // **************** ATTRIBUTES ***************************\r\n\r\n    public onConnect: Observable<any>;\t\t\r\n    public onClose: Observable<any>;\t\r\n    public onError: Observable<any>; \t\r\n    public onMessage: Observable<any>;\r\n\r\n    public endpoint: string;\r\n    public selfId: string;\r\n    public _source: any= null;\r\n\r\n    // ** set source label for use in messages\r\n    set source(val:string) { \r\n        if(!this._source) { this._source= {} }\r\n        this._source['label']= val;\r\n    }\r\n\r\n    // ** set auth token value **\r\n    set authToken(val:string) { this._token= val }    \r\n    // ** get / set websocket connection timeout 3000<=timeout<=60000 **\r\n    get connectionTimeout():number { return this._wsTimeout }\r\n    set connectionTimeout(val:number) {\r\n        this._wsTimeout= (val<3000) ? 3000 : (val>60000) ? 60000 : val;\r\n    }   \r\n    // ** is WS Stream connected?\r\n    get isOpen():boolean { \r\n        return (this.ws && (this.ws.readyState!=1 && this.ws.readyState!=3) ) ? true : false;\r\n    }  \r\n    // ** get / set filter to select delta messages just for supplied vessel id   \r\n    get filter():string { return this._filter }\r\n    // ** set filter= null to remove message filtering\r\n    set filter(id:string) { \r\n        if( id && id.indexOf('self')!=-1 ) {  // ** self\r\n            this._filter= (this.selfId) ? this.selfId : null;\r\n        }\r\n        else { this._filter= id }\r\n    }   \r\n    // ** returns true if Playback Hello message\r\n    get playbackMode():boolean { return this._playbackMode }\r\n\r\n    // ******************************************************\r\n\r\n    constructor( ) { \r\n        this._connect= new Subject<any>();\r\n        this.onConnect= this._connect.asObservable();   \r\n        this._close= new Subject<any>();\r\n        this.onClose= this._close.asObservable();  \r\n        this._error= new Subject<any>();\r\n        this.onError= this._error.asObservable();  \r\n        this._message= new Subject<any>();\r\n        this.onMessage= this._message.asObservable();         \r\n    }   \r\n\r\n    // ** Close WebSocket connection\r\n    close() { if(this.ws) { this.ws.close(); this.ws= null; } }\r\n   \r\n\t// ** Open a WebSocket at provided url\r\n\topen(url:string, subscribe?:string, token?:string) {\r\n        url= (url) ? url : this.endpoint;\r\n        if(!url) { return }\r\n        let q= (url.indexOf('?')==-1) ? '?' : '&'\r\n        if(subscribe) { url+=`${q}subscribe=${subscribe}` } \r\n        if(this._token || token) { url+= `${(subscribe) ? '&' : '?'}token=${this._token || token}` } \r\n        \r\n        this.close();\r\n        this.ws = new WebSocket(url);\r\n        // ** start connection watchdog **\r\n        setTimeout( \r\n            ()=>{\r\n                if(this.ws && (this.ws.readyState!=1 && this.ws.readyState!=3) ) { \r\n                    console.warn(`Connection watchdog expired (${this._wsTimeout/1000} sec): ${this.ws.readyState}... aborting connection...`);\r\n                    this.close(); \r\n                }\r\n            }, this._wsTimeout\r\n        );\r\n\t\t\r\n\t\tthis.ws.onopen= e=> { this._connect.next(e) }\r\n\t\tthis.ws.onclose= e=> { this._close.next(e) }\r\n\t\tthis.ws.onerror= e=> { this._error.next(e) }\r\n\t\tthis.ws.onmessage= e=> {this.parseOnMessage(e) }\r\n    }  \r\n    \r\n    // ** parse received message\r\n    private parseOnMessage(e) {\r\n        let data: any;\r\n        if(typeof e.data === 'string') {\r\n            try { data= JSON.parse(e.data) }\r\n            catch(e) { return }\r\n        }\r\n        if(this.isHello(data)) { \r\n            this.selfId= data.self;\r\n            this._playbackMode= (typeof data.startTime!= 'undefined') ? true : false;                 \r\n            this._message.next(data);\r\n        }      \r\n        else if(this.isResponse(data)) { \r\n            if(typeof data.login !== 'undefined') {\r\n                if(typeof data.login.token !== 'undefined') { this._token= data.login.token }\r\n            }                \r\n            this._message.next(data);\r\n        }             \r\n        else if(this._filter && this.isDelta(data)) {\r\n            if(data.context== this._filter) { this._message.next(data) } \r\n        }                \r\n        else { this._message.next(data) } \r\n    }\r\n\r\n    // ** send request via Delta stream\r\n    sendRequest(value:any):string {\r\n        if(typeof value !== 'object') { return null }\r\n        let msg= Message.request();\r\n        if(typeof value.login === 'undefined' && this._token) { msg['token']= this._token }\r\n        let keys= Object.keys(value);\r\n        keys.forEach( k=> { msg[k]= value[k] });\r\n        this.send(msg);\r\n        return msg.requestId;\r\n    }\r\n\r\n    // ** send put request via Delta stream\r\n    put(context:string, path:string, value:any):string {\r\n        let msg= {\r\n            context: (context=='self') ? 'vessels.self' : context,\r\n            put: { path: path, value: value }\r\n        };\r\n        return this.sendRequest(msg);\r\n    }    \r\n\r\n    // ** get auth token for supplied user details **\r\n    login(username:string, password:string) {\r\n        let msg= { \r\n            login: { \"username\": username, \"password\": password } \r\n        };\r\n        return this.sendRequest(msg);\r\n    }\r\n\r\n    // ** send data to Signal K stream\r\n    send(data:any) {\r\n        if(this.ws) {\r\n            if(typeof data === 'object') { data= JSON.stringify(data) }\r\n            this.ws.send(data);\r\n        }\r\n    }\r\n\r\n    // ** send value(s) via delta stream update **\r\n    sendUpdate(context:string, path:Array<any>);\r\n    sendUpdate(context:string, path:string, value:any);\r\n    sendUpdate(context:string='self', path: string | Array<any>, value?:any) {\r\n        let val= Message.updates();\r\n        if(this._token) { val['token']= this._token }\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        let uValues= [];\r\n        if(typeof path === 'string') {\r\n            uValues.push({ path: path, value: value });\r\n        }\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n            uValues= path;\r\n        }\r\n        let u= { \r\n            timestamp: new Date().toISOString(), \r\n            values: uValues \r\n        }\r\n        if(this._source) { u['source']= this._source }\r\n        val.updates.push( u ); \r\n        this.send(val);\r\n    }\r\n\r\n    // ** Subscribe to Delta stream messages options: {..}**\r\n    subscribe(context:string, path:Array<any>);\r\n    subscribe(context:string, path:string, options?:any);\r\n    subscribe(context:string='*', path:string | Array<any>='*', options?:any) {\r\n        let val= Message.subscribe();\r\n        if(this._token) { val['token']= this._token }\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n           val.subscribe= path;\r\n        }\r\n        if(typeof path === 'string') {\r\n            let sValue= {};\r\n            sValue['path']= path;\r\n            if(options && typeof options === 'object') {\r\n                if(options['period']) { sValue['period']= options['period'] }\r\n                if(options['minPeriod']) { sValue['minPeriod']= options['period'] }\r\n                if(options['format'] && \r\n                    (options['format']=='delta' || options['format']=='full') ) { \r\n                        sValue['format']= options['format'];\r\n                }\r\n                if(options['policy'] && \r\n                    (options['policy']=='instant' || options['policy']=='ideal'\r\n                    || options['policy']=='fixed') ) { \r\n                        sValue['policy']= options['policy'];\r\n                }\r\n            }\r\n            val.subscribe.push(sValue);\r\n        }\r\n        this.send(val);        \r\n    }\r\n\r\n    // ** Unsubscribe from Delta stream messages **\r\n    unsubscribe(context:string='*', path:any='*') {\r\n        let val= Message.unsubscribe();\r\n        if(this._token) { val['token']= this._token }\r\n        val.context= (context=='self') ? 'vessels.self' : context;\r\n        if(this._token) { val['token']= this._token }\r\n\r\n        if(typeof path === 'object' && Array.isArray(path) ) {\r\n           val.unsubscribe= path;\r\n        }\r\n        if(typeof path === 'string') { val.unsubscribe.push({path: path}) }\r\n        this.send(val); \r\n    }\r\n\r\n    // ** raise alarm for path\r\n    raiseAlarm(context:string, name:string, alarm:Alarm);\r\n    raiseAlarm(context:string, type:AlarmType, alarm:Alarm);\r\n    raiseAlarm(context:string='*', alarmId:any, alarm:Alarm) {\r\n        let n:string;\r\n        if(typeof alarmId === 'string') {\r\n            n=(alarmId.indexOf('notifications.')==-1) ? `notifications.${alarmId}` : alarmId;\r\n        }\r\n        else { n= alarmId }\r\n        this.sendUpdate(context, n, alarm.value );\r\n    }\r\n\r\n    // ** raise alarm for path\r\n    clearAlarm(context:string='*', name:string) {\r\n        let n=(name.indexOf('notifications.')==-1) ? `notifications.${name}` : name;\r\n        this.sendUpdate(context, n, null);\r\n    }    \r\n\r\n    // *************** MESSAGE PARSING ******************************\r\n    // ** returns true if message context is 'self'\r\n    isSelf(msg:any):boolean { return (msg.context== this.selfId) }\r\n    // ** returns true if message is a Delta message\r\n    isDelta(msg:any):boolean { return typeof msg.context!= 'undefined' }\r\n    // ** returns true if message is a Hello message\r\n    isHello(msg:any):boolean { \r\n        return (typeof msg.version!= 'undefined' && typeof msg.self!= 'undefined');\r\n    }     \r\n    // ** returns true if message is a request Response message\r\n    isResponse(msg:any):boolean { return typeof msg.requestId!= 'undefined' } \r\n}","/** Signal K server Apps\r\n * ************************************/\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SignalKApps  {\r\n\r\n   // **************** ATTRIBUTES ***************************\r\n\t\r\n    // ** apps api endpoint path\r\n    public endpoint: string;\r\n\r\n   // *******************************************************    \r\n\r\n    constructor(private http: HttpClient) { } \r\n\r\n    ngOnDestroy() { }\r\n    \r\n    // ** return List of installed apps\r\n    list() { \r\n        let ep= (this.endpoint.indexOf('webapps')==-1) ?\r\n            `${this.endpoint}list` : this.endpoint;\r\n        return this.http.get(ep);\r\n    }\r\n    \r\n}","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Subject, Observable, of } from 'rxjs';\n\nimport { SignalKHttp } from './http-api';\nimport { SignalKStream } from './stream-api';\nimport { SignalKApps } from './apps-api';\nimport { Path, Message } from './utils';\nimport { UUID } from './uuid';\n\ninterface Server_Info {\n    endpoints: any;\n    info: any,\n    apiVersions: Array<any>;\n}\n\ninterface JSON_Patch {\n    op: 'add' | 'replace' | 'remove' | 'copy' | 'move' | 'test';\n    path: string;\n    value: any;\n}\n\nexport enum APPDATA_CONTEXT {\n    USER= 'user',\n    GLOBAL= 'global'\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SignalKClient {\n    \n    private hostname: string;\n    private port: number;\n    private protocol: string;\n  \n    private _version: string= 'v1';      // ** default Signal K api version\n    private _token: string;             // token for when security is enabled on the server\n\n    private debug(val: any) { if(isDevMode()){ console.log(val) } }\n\n    // ** endpoints to fallback to if hello response is not received.\n    private fallbackEndpoints= {\n        endpoints: { v1: { } },\n        server: { id : \"fallback\" }\n    };    \n\n    // **************** ATTRIBUTES ***************************  \n\n    // ** server information block **\n    public server: Server_Info= {\n        endpoints: {},\n        info: {},\n        apiVersions: []\n    }  \n\n    // ** endpoints fallback to host address when no hello response\n    public fallback:boolean= false;\n\n    // ** get / set Signal K preferred api version to use **\n    get version():number { return parseInt( this._version.slice(1) ) }\n    set version(val: number) {\n        let v:string= 'v'+ val;\n        if(this.server.apiVersions.length==0) { \n            this._version= v;\n            this.debug(`Signal K api version set to: ${v}`);\n        }\n        else {\n            this._version= (this.server.apiVersions.indexOf(v)!=-1) ? v : this._version;\n            this.debug(`Signal K api version set request: ${v}, result: ${this._version}`);\n        }\n    }\n    // ** set auth token value **\n    set authToken(val:string) { \n        this._token= val;\n        this.api.authToken= val;\n        this.stream.authToken= val;\n    }    \n    // ** Message Object\n    get message() { return Message }\n\n    // ** generate and return a UUID object\n    get uuid():UUID { return new UUID() }\n\n    // *******************************************************\n    constructor( private http: HttpClient, \n                public apps: SignalKApps,\n                public api: SignalKHttp, \n                public stream: SignalKStream ) { \n        this.init();                          \n    }\n\n    ngOnDestroy() { this.stream.close() }   \n    \n    // ** initialise protocol, hostname, port values\n    private init(hostname:string='localhost', port:number=null, useSSL:boolean=false) {\n        this.hostname = hostname;\n        if(useSSL) {\n            this.protocol = 'https';\n            this.port = port || 443;\n        } \n        else {\n            this.protocol = 'http';\n            this.port = port || 80;\n        }   \n        let url= `${this.protocol}://${this.hostname}:${this.port}`;  \n        this.fallbackEndpoints.endpoints.v1['signalk-http']= `${url}/signalk/v1/api/`;\n        this.fallbackEndpoints.endpoints.v1['signalk-ws']= `${url}/signalk/v1/stream`;\n    }    \n\n    // **************** CONNECTION AND DISCOVERY  ********************\n\n    // ** Signal K server endpoint discovery request (/signalk).  \n    hello(hostname:string=null, port:number=null, useSSL:boolean=false) {\n        this.init(hostname, port, useSSL);\n        return this.get('/signalk');\n    }    \n\n\n    // ** connect to server (endpoint discovery) and DO NOT open Stream\n    connectAsPromise(hostname:string=null, port:number=null, useSSL:boolean=false):Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.debug('Contacting Signal K server.........');\n            this.hello(hostname, port, useSSL).subscribe(    // ** discover endpoints **\n                response=> { \n                    this.getLoginStatus().subscribe( r=>{} );\n                    if(this.stream) { this.stream.close() }\n                    this.processHello(response);\n                    this.api.endpoint= this.resolveHttpEndpoint();\n                    this.stream.endpoint= this.resolveStreamEndpoint();\n                    resolve(true);\n                },\n                error=> { \n                    if(this.fallback) { // fallback if no hello response\n                        if(this.stream) { this.stream.close() }\n                        this.processHello(null);\n                        this.api.endpoint= this.resolveHttpEndpoint();\n                        this.stream.endpoint= this.resolveStreamEndpoint();\n                        resolve(true);                   \n                    }\n                    else {\n                        this.disconnectedFromServer();       \n                        reject(error);\n                    }\n                }\n            );\n        });\n    }    \n\n    // ** connect to server (endpoint discovery) and DO NOT open Stream\n    connect(hostname:string=null, port:number=null, useSSL:boolean=false):Observable<any> {\n        let sub: Subject<any>= new Subject();\n        this.debug('Contacting Signal K server.........');\n        this.hello(hostname, port, useSSL).subscribe(    // ** discover endpoints **\n            response=> { \n                this.getLoginStatus().subscribe( r=>{} );\n                if(this.stream) { this.stream.close() }\n                this.processHello(response);\n                this.api.endpoint= this.resolveHttpEndpoint();\n                this.stream.endpoint= this.resolveStreamEndpoint();\n                sub.next(true);\n            },\n            error=> { \n                if(this.fallback) { // fallback if no hello response\n                    if(this.stream) { this.stream.close() }\n                    this.processHello(null);\n                    this.api.endpoint= this.resolveHttpEndpoint();\n                    this.stream.endpoint= this.resolveStreamEndpoint();\n                    sub.next(true);                    \n                }\n                else {\n                    this.disconnectedFromServer();       \n                    sub.error(error);\n                }\n            }\n        );\n        return sub.asObservable();\n    }  \n\n    // ** disconnect from server\n    disconnect() { this.stream.close()} \n    \n    // ** Connect + open Delta Stream (endpoint discovery)\n    connectStreamAsPromise(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null):Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.connectAsPromise(hostname, port, useSSL)\n            .then( ()=> { \n                // ** connect to stream api at preferred version else fall back to default version\n                let url= this.resolveStreamEndpoint();\n                if(!url) { \n                    reject( new Error('Server has no advertised Stream endpoints!') );\n                    return;\n                }\n                this.stream.open(url, subscribe);\n                resolve( true );\n            })\n            .catch( e=> { reject( e ) });\n        });\n    } \n\n    // ** Connect + open Delta Stream (endpoint discovery)\n    connectStream(hostname:string=null, port:number=null, useSSL:boolean=false, subscribe:string=null):Observable<any> {\n        let sub: Subject<any>= new Subject();\n        this.connect(hostname, port, useSSL).subscribe( \n            ()=> { \n                // ** connect to stream api at preferred version else fall back to default version\n                let url= this.resolveStreamEndpoint();\n                if(!url) { \n                    sub.error( new Error('Server has no advertised Stream endpoints!') );\n                    return;\n                }\n                this.stream.open(url, subscribe);\n                sub.next( true );\n            },\n            e=> { sub.error( e ) }\n        );\n        return sub.asObservable();\n    }\n\n    // ** connect to playback stream (endpoint discovery)\n    connectPlaybackAsPromise(hostname:string=null, port:number=null, useSSL:boolean=false, options:any):Promise<any> {\n        return new Promise( (resolve, reject)=> {\n            this.connectAsPromise(hostname, port, useSSL)\n            .then( ()=> { \n                // ** connect to playback api at preferred version else fall back to default version\n                this.openPlayback(null, options, this._token);\n                resolve( true );\n            })\n            .catch( e=> { reject( e ) });\n        })\n    }\n\n    // ** connect to playback stream (endpoint discovery)\n    connectPlayback(hostname:string=null, port:number=null, useSSL:boolean=false, options:any):Observable<any> {\n        let sub: Subject<any>= new Subject();\n        this.connect(hostname, port, useSSL).subscribe( \n            ()=> { \n                // ** connect to playback api at preferred version else fall back to default version\n                this.openPlayback(null, options, this._token);\n                sub.next( true );\n            },\n            e=> { sub.error( e ) }\n        );\n        return sub.asObservable();\n    }      \n\n    // ** connect to delta stream with (NO endpoint discovery)\n    openStream(url:string=null, subscribe?:string, token?:string) {\n        this.debug('openStream.........');  \n        if(!url) {     // connect to stream api at discovered endpoint\n            url= this.resolveStreamEndpoint();\n            if(!url) { \n                return( new Error('Server has no advertised Stream endpoints!') );\n            }\n        }\n        this.stream.open(url, subscribe, token);  \n        return true;      \n    }   \n\n    // ** connect to playback stream (NO endpoint discovery)\n    openPlayback(url:string=null, options?:any, token?:string) {\n        this.debug('openPlayback.........');\n        if(!url) {     // connect to stream api at discovered endpoint\n            url= this.resolveStreamEndpoint();\n            if(!url) { \n                return( new Error('Server has no advertised Stream endpoints!') );\n            }\n            url= url.replace('stream', 'playback');\n        }        \n        let pb= '';\n        let subscribe: string;\n        if(options && typeof options ==='object'){\n            pb+= (options.startTime) ? '?startTime=' + options.startTime.slice(0,options.startTime.indexOf('.')) + 'Z' : '';\n            pb+= (options.playbackRate) ? `&playbackRate=${options.playbackRate}` : '';\n            subscribe= (options.subscribe) ? options.subscribe : null;            \n        }\n        this.stream.open(url + pb, subscribe, token); \n        return true;\n    }      \n\n    // ** process Hello response \n    private processHello(response: any) {\n        this.server.endpoints= (response && response['endpoints']) ? \n            response['endpoints'] : this.fallbackEndpoints.endpoints;\n        this.server.info= (response && response['server']) ? \n            response['server'] : this.fallbackEndpoints.server;\n        this.server.apiVersions= (this.server.endpoints) ? Object.keys(this.server.endpoints) : [];\n        this.debug(this.server.endpoints);\n        this.api.server= this.server.info;\n        this.apps.endpoint= this.resolveAppsEndpoint();\n    }\n\n    // ** return signalk apps api url\n    private resolveAppsEndpoint():string {      \n        let url:string= this.resolveHttpEndpoint().replace('api','apps');  \n        if(this.server && this.server.info.id=='signalk-server-node') { \n            let ver= this.server.info['version'].split('.');\n            if(ver[1]<26) { //use legacy link for older versions\n                url= `${this.protocol}://${this.hostname}:${this.port}/webapps`;\n            }\n        }\n        return url;\n    } \n\n    // ** return preferred WS stream url\n    public resolveStreamEndpoint():string {\n        if(this.server.endpoints[this._version] && this.server.endpoints[this._version]['signalk-ws']) {\n            this.debug(`Connecting endpoint version: ${this._version}`);\n            return `${this.server.endpoints[this._version]['signalk-ws']}`;\n        }\n        else if(this.server.endpoints['v1'] && this.server.endpoints['v1']['signalk-ws']) { \n            this.debug(`Connection falling back to: v1`);\n            return `${this.server.endpoints['v1']['signalk-ws']}` \n        }\n        else { return null }\n    }  \n\n    // ** return signalk-http endpoint url\n    private resolveHttpEndpoint():string {\n        let url: string;\n        if(this.server.endpoints[this._version]) { // ** connection made\n            // ** connect to http endpoint at prescribed version else fall back to default version\n            if(this.server.endpoints[this._version]['signalk-http']) {\n                url= `${this.server.endpoints[this._version]['signalk-http']}`;\n            }\n            else { url= `${this.server.endpoints['v1']['signalk-http']}` }   \n        } \n        else {\n            let msg= 'No current connection http endpoint service! Use connect() to establish a connection.'\n            this.debug(msg);\n        } \n        return url;   \n    }    \n    \n    // ** cleanup on server disconnection\n    private disconnectedFromServer() {\n        this.server.endpoints= {};\n        this.server.info= {};\n        this.server.apiVersions= [];  \n    }\n\n    //** return observable response from http path\n    get(path:string) { \n        if(path && path.length>0 && path[0]=='/') { path= path.slice(1) }\n        let url= `${this.protocol}://${this.hostname}:${this.port}/${Path.dotToSlash(path)}`;\n        this.debug(`get ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }        \n    };  \n\n    //** return observable response for put to http path\n    put(path:string, value:any) { \n        let url= `${this.protocol}://${this.hostname}:${this.port}/${Path.dotToSlash(path)}`;\n        this.debug(`put ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.put( url, value, { headers: headers } );\n        }\n        else { return this.http.put(url, value) }        \n    };\n\n    //** return observable response for post to http path\n    post(path:string, value:any) { \n        if(path && path.length>0 && path[0]=='/') { path= path.slice(1) }\n        let url= `${this.protocol}://${this.hostname}:${this.port}/${Path.dotToSlash(path)}`;\n        this.debug(`post ${url}`);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post( url, value, { headers: headers } );\n        }\n        else { return this.http.post(url, value) }        \n    };   \n\n    // ** get auth token for supplied user details **\n    login(username:string, password:string) {\n        let headers= new HttpHeaders().set('Content-Type', `application/json`);\n        return this.http.post(\n            `${this.protocol}://${this.hostname}:${this.port}/signalk/${this._version}/auth/login`,\n            { \"username\": username, \"password\": password },\n            { headers }\n        );\n    }\n\t\n    // ** logout from server **\n    logout():Observable<boolean> { \n        let sub: Subject<boolean>= new Subject();;\n\t\tlet url=`${this.protocol}://${this.hostname}:${this.port}/signalk/${this._version}/auth/logout`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}`} );\n            this.http.put( url, null, { headers: headers, responseType: 'text' } ).subscribe(\n                ()=> { sub.next(true) },\n                ()=> { sub.next(false) }\n            );\n        }        \n        else { \n            this.http.put( url, null, {responseType: 'text'} ).subscribe(\n                ()=> { sub.next(true) },\n                ()=> { sub.next(false) }\n            );\n        }\n        return sub.asObservable();\n    }\t  \n    \n    // ** is a user authenticated to the server **\n    isLoggedIn():Observable<boolean> {\n        let sub: Subject<boolean>= new Subject();    \n        this.getLoginStatus().subscribe(\n            r=> { sub.next( r.status=='loggedIn' ? true : false ) },\n            ()=> { sub.next(false) } \n        );\n        return sub.asObservable();\n    }\n    // ** fetch login status from server **\n    getLoginStatus():Observable<any> { return this.get('/loginstatus') }    \n    \n    //** get data via the snapshot http api path for supplied time\n    snapshot(context:string, time:string) { \n        if(!time) { return }\n        time= time.slice(0,time.indexOf('.')) + 'Z';\n        let url= this.resolveHttpEndpoint();\n        if(!url) { return }\n        url= `${url.replace('api','snapshot')}${Path.contextToPath(context)}?time=${time}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }\n    }\n    \n    /*******************************\n     *  applicationData api methods \n     * context: 'user' or 'global'\n     * appId: application id string\n     *******************************/\n    private _appId:string;\n    private _appVersion:string;\n\n    private resolveAppDataEndpoint(context:APPDATA_CONTEXT, appId:string) {\n        if(!context || !appId) { return null }\n        let url:string= this.resolveHttpEndpoint().replace('api','applicationData');\n        return `${url}${context}/${appId}/`;\n    }\n\n    setAppId(value:string) { this._appId= value }\n    setAppVersion(value:string) { this._appVersion= value }\n\n    // ** get list of available versions of data stored **\n    appDataVersions(context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId) {\n        let url= this.resolveAppDataEndpoint(context, appId);\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }     \n    }\n    // ** get list of available keys for a stored path **\n    appDataKeys(path:string='', context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        path= (path.length!=0 && path[0]=='/') ? path.slice(1) : path;\n        let url= this.resolveAppDataEndpoint(context, appId);\n        url+= `${version}/${path}?keys=true`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }     \n    }    \n\n    // ** get stored value at provided path **\n    appDataGet(path:string='', context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        path= (path.length!=0 && path[0]=='/') ? path.slice(1) : path;\n        let url= this.resolveAppDataEndpoint(context, appId);\n        url+= `${version}/${path}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.get( url, { headers: headers } );\n        }\n        else { return this.http.get(url) }     \n    }\n\n    // ** set stored value at provided path **\n    appDataSet(path:string, value:any, context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        if(!path) { return }\n        if(path[0]=='/') { path= path.slice(1) }\n        let ep= this.resolveAppDataEndpoint(context, appId);\n        if(!ep) { return }\n        let url= `${ep}${version}/${Path.dotToSlash(path)}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post(url, value, { headers: headers } );\n        }        \n        else { return this.http.post(url, value) }\n    }    \n    \n    // ** update / patch stored values using Array of JSON patch objects **\n    appDataPatch(value:Array<JSON_Patch>, context:APPDATA_CONTEXT= APPDATA_CONTEXT.USER, appId:string= this._appId, version:string= this._appVersion) {\n        let ep= this.resolveAppDataEndpoint(context, appId);\n        if(!ep || !version ) { return }\n        let url= `${ep}${version}`;\n        if(this._token) {\n            let headers= new HttpHeaders( { 'Authorization': `JWT ${this._token}` } );\n            return this.http.post(url, value, { headers: headers } );\n        }        \n        else { return this.http.post(url, value) }\n    }    \n\n}\n","/*****************************\r\n * SignalKClient Module:\r\n *****************************/\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [ HttpClientModule ],    \r\n    declarations: [],\r\n    exports: [],\r\n    entryComponents: [], \r\n    providers: []  \r\n})\r\nexport class SignalKClientModule {}\r\n\r\nexport * from './signalk-client';\r\nexport * from './utils';\r\nexport * from './stream-api';\r\nexport * from './http-api';\r\nexport * from './apps-api';"],"names":[],"mappings":"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"}